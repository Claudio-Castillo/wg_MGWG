plot(stk+fitmc)
fitmc <- sca(stk, idxs, fit='MCMC', mcmc=SCAMCMC(mcprobe=0.05))
plot(stk+fitmc)
fitmc <- sca(stk, idxs, fit='MCMC', mcmc=SCAMCMC(mcprobe=0.4))
plot(stk+fitmc)
plot(stk+fitmc, probs=c(0.025,0.33,0.5,0.66,0.975))
plot(stk+fitmc, probs=c(0.02,0.33,0.5,0.66,0.98))
fit
fitsep <- sca(stk, idxs, fmod=~s(age, k=5) + s(year, k=17))
ressep <- residuals(fitsep, stk, idxs)
plot(ressep)
plot(fitsep, stk)
plot(fitsep, idxs[1])
plot(fitsep, idxs[2])
plot(stk+simulate(fitsep, 250))
fitsepmc <- sca(stk, idxs, fit='MCMC', mcmc=SCAMCMC())
plot(setk+fitsepmc)
plot(stk+fitsepmc)
wireframe(data~year+age, data=harvest(fit))
wireframe(data~year+age, data=harvest(fitsep))
q()
source('algorithm.R')
q()
range(idxs[[1]])
range(idxs[[1]])['maxyear']
range(idxs[[1]])['maxyear']-3
i0 <- lapply(idxs, function(x){
myr <- range(x)['maxyear']
index(x)[,ac((myr-yrs):myr)][] <- NA
x
}
)
library(FLa4a)
i0 <- lapply(idxs, function(x){
myr <- range(x)['maxyear']
index(x)[,ac((myr-yrs):myr)][] <- NA
x
}
)
yrs=3
i0 <- lapply(idxs, function(x){
myr <- range(x)['maxyear']
index(x)[,ac((myr-yrs):myr)][] <- NA
x
})
i0[[1]]
index(i0[[1]])
predIdxs <- function(stk, idxs, yrs=3, ...){
i0 <- lapply(idxs, function(x){
myr <- range(x)['maxyear']
index(x)[,ac((myr-yrs+1):myr)][] <- NA
x
})
args <- list(...)
args$stock <- stk
args$indices <- i0
fit <- do.call("sca", args)
fit
}
fit0 <- predIdxs(stk, idxs)
fit0
fit
index(fit0)
fit0
wireframe(data~year+age, data=harvest(fit))
x11()
wireframe(data~year+age, data=harvest(fit0))
wireframe(data~year+age, data=harvest(fit0)[,ac(2010:2016)])
dev.ff()
dev.off()
dev.off()
wireframe(data~year+age, data=harvest(fit0)[,ac(2010:2016)])
x11()
wireframe(data~year+age, data=harvest(fit)[,ac(2010:2016)])
seq_along(idxs)
predIdxs <- function(stk, idxs, yrs=3, ...){
i0 <- lapply(idxs, function(x){
myr <- range(x)['maxyear']
index(x)[,ac((myr-yrs+1):myr)][] <- NA
x
})
args <- list(...)
args$stock <- stk
args$indices <- i0
fit <- do.call("sca", args)
lst0 <- index(fit)
for(i seq_along(idxs)){
lst0[[i]] <- log(index(idxs)[[i]]/index(fit)[[i]])^2
}
mean(unlist(lst0))
}
predIdxs <- function(stk, idxs, yrs=3, ...){
i0 <- lapply(idxs, function(x){
myr <- range(x)['maxyear']
index(x)[,ac((myr-yrs+1):myr)][] <- NA
x
})
args <- list(...)
args$stock <- stk
args$indices <- i0
fit <- do.call("sca", args)
lst0 <- index(fit)
for(i in seq_along(idxs)){
lst0[[i]] <- log(index(idxs)[[i]]/index(fit)[[i]])^2
}
mean(unlist(lst0))
}
predIdxs(stk, idxs)
predIdxs <- function(stk, idxs, yrs=3, ...){
i0 <- lapply(idxs, function(x){
myr <- range(x)['maxyear']
index(x)[,ac((myr-yrs+1):myr)][] <- NA
x
})
args <- list(...)
args$stock <- stk
args$indices <- i0
fit <- do.call("sca", args)
lst0 <- index(fit)
for(i in seq_along(idxs)){
lst0[[i]] <- log(index(idxs[[i]])/index(fit)[[i]])^2
}
mean(unlist(lst0))
}
predIdxs(stk, idxs)
ra
FLa4a:::ra
retroFuck <- function(stk, idxs, retro=5, ...){
args <- list(...)
lst0 <- split(1:retro, 1:retro)
lst0 <- lapply(lst0, function(x){
yr <- range(stk)["maxyear"] - x
args$stock <- window(stk, end=yr)
args$indices <- window(idx, end=yr)
fit <- do.call("sca", args)
stk + fit
})
}
retroFuck(stk, idxs)
retroFuck <- function(stk, idxs, retro=5, ...){
args <- list(...)
lst0 <- split(1:retro, 1:retro)
lst0 <- lapply(lst0, function(x){
yr <- range(stk)["maxyear"] - x
args$stock <- window(stk, end=yr)
args$indices <- window(idxs, end=yr)
fit <- do.call("sca", args)
stk + fit
})
}
retroFuck(stk, idxs)
debug(retroFuck)
retroFuck(stk, idxs)
lst0
retroFuck <- function(stk, idxs, retro=5, ...){
args <- list(...)
lst0 <- split(0:retro, 0:retro)
lst0 <- lapply(lst0, function(x){
yr <- range(stk)["maxyear"] - x
args$stock <- window(stk, end=yr)
args$indices <- window(idxs, end=yr)
fit <- do.call("sca", args)
stk + fit
})
}
retroFuck <- function(stk, idxs, retro=5, ...){
args <- list(...)
lst0 <- split(0:retro, 0:retro)
lst0 <- lapply(lst0, function(x){browser()
yr <- range(stk)["maxyear"] - x
args$stock <- window(stk, end=yr)
args$indices <- window(idxs, end=yr)
fit <- do.call("sca", args)
stk + fit
})
}
retroFuck(stk, idxs)
n
x
yr
sca(args$stock, args$indices
)
Q
retroFuck <- function(stk, idxs, retro=5, ...){
args <- list(...)
lst0 <- split(0:retro, 0:retro)
lst0 <- lapply(lst0, function(x){
yr <- range(stk)["maxyear"] - x
args$stock <- window(stk, end=yr)
args$indices <- window(idxs, end=yr)
fit <- do.call("sca", args)
args$stock + fit
})
}
retroFuck(stk, idxs)
retroFuck <- function(stk, idxs, retro=5, ...){
args <- list(...)
lst0 <- split(0:retro, 0:retro)
lst0 <- lapply(lst0, function(x){
yr <- range(stk)["maxyear"] - x
args$stock <- window(stk, end=yr)
args$indices <- window(idxs, end=yr)
fit <- do.call("sca", args)
args$stock + fit
})
lst0
}
retroFuck(stk, idxs)->stk.retro
plot(stk.retro)
plot(FLStocks(stk.retro))
retroFuck <- function(stk, idxs, retro=5, ...){
args <- list(...)
lst0 <- split(0:retro, 0:retro)
lst0 <- lapply(lst0, function(x){
yr <- range(stk)["maxyear"] - x
args$stock <- window(stk, end=yr)
args$indices <- window(idxs, end=yr)
fit <- do.call("sca", args)
args$stock + fit
})
FLStocks(lst0)
}
mohn <- function (stks, qoi=c('fbar','ssb','rec'), ...){
lst0 <- list()
length(lst0) <- length(stks)
for(i in seq_along(lst0)){
lst0 <- lapply(stks, i)
browser()
}
}
mohn(stk.retro)
mohn <- function (stks, qoi=c('fbar','ssb','rec'), ...){
lst0 <- list()
length(lst0) <- length(stks)
for(i in seq_along(lst0)){
browser()
lst0 <- lapply(stks, i)
}
}
mohn(stk.retro)
ls()
i
Q
mohn <- function (stks, qoi=c('fbar','ssb','rec'), ...){
lst0 <- list()
length(lst0) <- length(stks)
for(i in seq_along(qoi)){
browser()
lst0 <- lapply(stks, i)
}
}
mohn(stk.retro)
i
Q
mohn <- function (stks, qoi=c('fbar','ssb','rec'), ...){
lst0 <- list()
length(lst0) <- length(stks)
for(i in qoi){
browser()
lst0 <- lapply(stks, i)
}
}
mohn(stk.retro)
i
lst0 <- lapply(stks, i)
lst0
c(lst0)
unlist(lst0)
unlist(lst0)-unlist(lst0[[1]])
data.frame(r=unlist(lst0[-1]),o=unlist(lst0[[1]]))
unlist(lst0[-1])
data.frame(r=unlist(lst0[-1]),o=unlist(lst0[[1]]))
unlist(lst0[[1]])
c(lst0[[1]])
data.frame(r=unlist(lst0[-1]),o=c(lst0[[1]]))
data.frame(o = c(lst0[[1]]), r = unlist(lst0[-1]))
unlist(lst0[-1])/c(lst0[[1]])
unlist(lst0[-1])/c(lst0[[1]])-1
(unlist(lst0[-1])/c(lst0[[1]])-1)
sum(unlist(lst0[-1])/c(lst0[[1]])-1
)
vector()
vector(mode='numeric')
vector(mode='numeric', len=3)
?vector
v0 <- vector(mode='numeric', len=3)
v0
names(v0) <- qoi
v0
Q
mohn <- function (stks, qoi=c('fbar','ssb','rec'), ...){
v0 <- vector(mode='numeric', len=3)
names(v0) <- qoi
for(i in qoi){
lst0 <- lapply(stks, i)
v0[i] <- sum(unlist(lst0[-1])/c(lst0[[1]])-1)
}
}
mohn(stk.retro)
mohn <- function (stks, qoi=c('fbar','ssb','rec'), ...){
v0 <- vector(mode='numeric', len=3)
names(v0) <- qoi
for(i in qoi){
lst0 <- lapply(stks, i)
v0[i] <- sum(unlist(lst0[-1])/c(lst0[[1]])-1)
}
v0
}
mohn <- function (stks, qoi=c('fbar','ssb','rec'), ...){
v0 <- vector(mode='numeric', len=length(qoi))
names(v0) <- qoi
for(i in qoi){
lst0 <- lapply(stks, i)
v0[i] <- sum(unlist(lst0[-1])/c(lst0[[1]])-1)
}
v0
}
mohn(stk.retro)
retro
retro <- function(stk, idxs, retro=5, ...){
args <- list(...)
lst0 <- split(0:retro, 0:retro)
lst0 <- lapply(lst0, function(x){
yr <- range(stk)["maxyear"] - x
args$stock <- window(stk, end=yr)
args$indices <- window(idxs, end=yr)
fit <- do.call("sca", args)
args$stock + fit
})
FLStocks(lst0)
}
fit <- sca(stk, idxs)
stk.retro <- retro(stk, idxs, retro=7)
fit.rm <- mohn(stk.retro)
fit.pi <- predIdxs(stk, idxs)
fit.rm
fit.pi
plot(stk.retro)
fitsep <- sca(stk, idxs, fmod=~s(age, k=5) + s(year, k=17))
fmod <- ~s(age, k=5) + s(year, k=17)
fitsep <- sca(stk, idxs, fmodel=fmod)
stk.retro <- retro(stk, idxs, retro=7, fmodel=fmod)
fit.rm <- mohn(stk.retro)
plot(stk.retro)
fit.rm
fit <- sca(stk, idxs)
stk.retro <- retro(stk, idxs, retro=7)
fit.rm <- mohn(stk.retro)
fit.pi <- predIdxs(stk, idxs)
fmod <- ~s(age, k=5) + s(year, k=17)
fitsep <- sca(stk, idxs, fmodel=fmod)
stksep.retro <- retro(stk, idxs, retro=7, fmodel=fmod)
fitsep.rm <- mohn(stksep.retro)
fitsep.pi <- predIdxs(stksep, idxs)
predIdxs
fitsep.pi <- predIdxs(stk, idxs, fmodel=fmod)
fitsep.pi
fit.pi
q()
library(FLa4a)
library(ggplotFL)
setwd('../')
idxs <- readFLIndices('survey.dat')
idxs <- window(idxs, end=2016)
stk <- readFLStock('index.low', no.discards = TRUE)
stk <- window(stk, end=2016, start=1983)
stk <- setPlusGroup(stk, 6)
range(stk)[c('minfbar','maxfbar')] <- c(2,4)
setwd('a4asca')
fit <- sca(stk, idxs)
fitmc <- sca(stk, idxs, fit='MCMC', mcmc=SCAMCMC(mcsave=250000))
SCAMCMC()
fitmc <- sca(stk, idxs, fit='MCMC', mcmc=SCAMCMC(mcmc=250000))
fitmet <- metrics(stk+fitmc)
fitmet <- as.data.frame(fitmet, quantiles, probs=c(0.5,0.025, 0.975))
fitmet <- as.data.frame(fitmet, quantile, probs=c(0.5,0.025, 0.975))
?quantile
fitmet <- as.data.frame(lapply(fitmet, quantile, probs=c(0.5,0.025, 0.975)))
fitmet
lapply(fitmet, quantile, probs=c(0.5,0.025, 0.975))
fitmet <- metrics(stk+fitmc)
lapply(fitmet, quantile, probs=c(0.5,0.025, 0.975))
flqs <- lapply(fitmet, quantile, probs=c(0.5,0.025, 0.975))
flqs[[1]]
flqs[[1]][drop=TRUE]
fitmet <- metrics(stk+fitmc)
fitmet <- lapply(fitmet, quantile, probs=c(0.5,0.025, 0.975))
fitmet <- lapply(fitmet, '[', drop=TRUE)
fitmet
do.call('cbind', fitmet)
names(fitmet)
fitmet <- metrics(stk+fitmc)
fitmet <- lapply(fitmet, quantile, probs=c(0.5,0.025, 0.975))
fitmet <- lapply(fitmet, '[', drop=TRUE)
fitmet <- do.call('cbind', fitmet)
names(fitmet) <- c('R', 'Low', 'High', 'SSB', 'Low', 'High', 'Catch', 'Low', 'High', 'Fbar', 'Low', 'High')
write.csv(fitmet, file='tab1.csv') 
names(fitmet)
colnames(fitmet)
colnames(fitmet) <- c('R', 'Low', 'High', 'SSB', 'Low', 'High', 'Catch', 'Low', 'High', 'Fbar', 'Low', 'High')
write.csv(fitmet, file='tab1.csv') 
index(fitmc)
is(index(fitmc))
length(index(fitmc))
lapply(index(fitmc), iterVars)
lapply(index(fitmc), iterVars)lapply(index(fitmc), iterVars)
lapply(index(fitmc), iterVars)
c(lapply(index(fitmc), iterVars))
unlist(lapply(index(fitmc), iterVars))
unlist(lapply(index(fitmc), iterVars))
unlist(lapply(index(fitmc), iterMedian))
unlist(lapply(idxs, index))
dump <- function(stock, indices, fit, probs=c(0.5,0.025, 0.975)){
fitmet <- metrics(stock+fit)
fitmet <- lapply(fitmet, quantile, probs=probs)
fitmet <- lapply(fitmet, '[', drop=TRUE)
fitmet <- do.call('cbind', fitmet)
colnames(fitmet) <- c('R', 'Low', 'High', 'SSB', 'Low', 'High', 'Catch', 'Low', 'High', 'Fbar', 'Low', 'High')
write.csv(fitmet, file='tab1.csv') 
}
dump(stk, idxs, fitmc)
dumpTab1 <- function(stock, indices, fit, probs=c(0.5,0.025, 0.975), file='tab1.csv'){
fitmet <- metrics(stock+fit)
fitmet <- lapply(fitmet, quantile, probs=probs)
fitmet <- lapply(fitmet, '[', drop=TRUE)
fitmet <- do.call('cbind', fitmet)
colnames(fitmet) <- c('R', 'Low', 'High', 'SSB', 'Low', 'High', 'Catch', 'Low', 'High', 'Fbar', 'Low', 'High')
write.csv(fitmet, file=file) 
}
write.tab(fit.rm, file='mohn.txt')
write.tab(fit.pi, file='predIdxs.txt')
write.write.table(fit.rm, file='mohn.txt')
write.table(fit.pi, file='predIdxs.txt')
write.table(fit.rm, file='mohn.txt')
write.table(fit.pi, file='predIdxs.txt')
fit.rm
?write.table
write.table(fit.rm, file='mohn.txt', quote=FALSE, col.names=FALSE, row.names=FALSE)
write.table(fit.rm, file='mohn.txt', quote=FALSE, row.names=FALSE)
write.table(fit.rm, file='mohn.txt', quote=FALSE, col.names=FALSE)
write.table(t(fit.rm), file='mohn.txt', quote=FALSE, col.names=FALSE)
write.table(t(fit.rm), file='mohn.txt', quote=FALSE, row.names=FALSE)
write.csv(t(fit.rm), file='mohn.txt', quote=FALSE, row.names=FALSE)
write.table(fit.pi, file='predIdxs.txt', quote=FALSE, col.names=FALSE)
write.table(fit.pi, file='predIdxs.txt', quote=FALSE, col.names=FALSE)
write.table(fit.pi, file='predIdxs.txt', quote=FALSE, col.names=FALSE, row.names=FALSE)
dumpTab1 <- function(stock, indices, fit, probs=c(0.5,0.025, 0.975), prefix='fit', predIdxs, mohnRho){
fitmet <- metrics(stock+fit)
fitmet <- lapply(fitmet, quantile, probs=probs)
fitmet <- lapply(fitmet, '[', drop=TRUE)
fitmet <- do.call('cbind', fitmet)
colnames(fitmet) <- c('R', 'Low', 'High', 'SSB', 'Low', 'High', 'Catch', 'Low', 'High', 'Fbar', 'Low', 'High')
write.csv(fitmet, file=paste(prefix, 'tab1.csv', sep='-')) 
write.table(predIdxs, file=paste(prefix, 'predIdxs.txt', sep='-'), quote=FALSE, col.names=FALSE, row.names=FALSE)
write.csv(t(mohnRho), file=paste(prefix, 'mohn.txt', sep='-'), quote=FALSE, row.names=FALSE)
}
args(dumpTab1
)
dumpTab1(stk, idxs, fitmc, fit.pi, fit.rm)
debug(dumpTab1)
dumpTab1(stk, idxs, fitmc, fit.pi, fit.rm)
dumpTab1(stk, idxs, fitmc, predIdxs=fit.pi, mohnRho=fit.rm)
writeFLStock
writeFLStock(stk)
#' Title
#'
#' @param cutoff 
#'
#' @return
#' @export
#'
#' @examples
filter_down <- function(cutoff = 30) {
    dplyr::filter(swiss, Agriculture < cutoff)
}
q()
library(RMGWG)
library(ggplotFL)
setwd('../')
idxs <- readFLIndices('survey.dat')
idxs <- window(idxs, end=2016)
stk <- readFLStock('index.low', no.discards = TRUE)
stk <- window(stk, end=2016, start=1983)
stk <- setPlusGroup(stk, 6)
range(stk)[c('minfbar','maxfbar')] <- c(2,4)
setwd('a4asca')
#====================================================================
# default model
#====================================================================
fit <- sca(stk, idxs)
stk.retro <- retro(stk, idxs, retro=7)
fit.rm <- mohn(stk.retro)
fit.pi <- predIdxs(stk, idxs)
library(devtools)
load_all('../../../RMGWG/')
install.packages('xml2')
install.packages('xml2')
load_all('../../../RMGWG/')
load_all('../../../RMGWG/')
fit.pi <- predIdxs(stk, idxs)
dumpTab1(stk, idxs, fitmc, predIdxs=fit.pi, mohnRho=fit.rm)
fitmc <- sca(stk, idxs, fit='MCMC', mcmc=SCAMCMC(mcmc=250000))
dumpTab1(stk, idxs, fitmc, predIdxs=fit.pi, mohnRho=fit.rm, prefix='te')
fmod <- ~s(age, k=5) + s(year, k=17)
fitsep <- sca(stk, idxs, fmodel=fmod)
stksep.retro <- retro(stk, idxs, retro=7, fmodel=fmod)
fitsep.rm <- mohn(stksep.retro)
fitsep.pi <- predIdxs(stk, idxs, fmodel=fmod)
fitsepmc <- sca(stk, idxs, fmodel=fmod, fit='MCMC', mcmc=SCAMCMC(mcmc=250000))
dumpTab1(stk, idxs, fitsepmc, predIdxs=fitsep.pi, mohnRho=fitsep.rm, prefix='sep')
ls()
q()
